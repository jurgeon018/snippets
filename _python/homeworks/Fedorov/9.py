# Упражнение 9.1
# Найдите площадь треугольника с помощью формулы Герона. Стороны задаются с
# клавиатуры. Реализовать вычисление площади в виде функции, на вход которой подаются
# три числа, на выходе – площадь. Функция находится в отдельном модуле, где происходит
# разделение между запуском и импортированием. Описание математических функций
# можно найти в документации
# s = sqrt(p(p-a)(p-b)(p-c))
# p = (a+b+c)/2
# Упражнение 9.2
# Вывести число Пи с точностью до сотых.
# Упражнение 9.3
# Создайте в отдельном модуле функцию для вычисления выражения: sqrt 1 - sin**2*x
# Упражнение 9.4
# Напишите программу-игру в виде отдельного модуля. Компьютер загадывает
# случайное число, пользователь пытается его угадать. Программа запрашивает число
# ОДИН раз. Если число угадано, то выводим на экран «Победа», иначе – «Повторите еще
# раз». Для написания программы понадобится функция randint() из модуля random 36 .
# Упражнение 9.8
# Напишите программу для моделирования бросания игрального кубика каждым из
# двух игроков. Определить, кто из игроков получил на кубике больше очков.

import math
import random


def heron(a, b, c):
    p = a+b+c
    s = math.sqrt(p*(p-a)*(p-b)*(p-c))
    return s


a = int(input())
b = int(input())
c = int(input())
print(heron(a, b, c))
9.1

print(round(math.pi, 2))
9.2


def sinus(x):
    return math.sqrt(1 - math.sin(x)**2)


x = int(input())
print(sinus(x))
9.3

x = random.randint(1, 10)
print(x)
inp = int(input())
if x == inp:
    print('ha! gotcha!')
else:
    print('thy again')
9.4


def zed(x, y):
    z = (x + (2+y)/(x*x))/(y+(1)/(math.sqrt(x*x + 10)))
    q = 2.8*math.sin(x)+abs(y)
    return 'z =', z, 'q = ', q


print(zed(10, 20))
9.6


def fsin(x):
    if 0.2 <= x <= 0.9:
        return math.sin(x)
    else:
        return 1


print(fsin(22.59))

x = random.randint(1, 6)
y = random.randint(1, 6)
if x > y:
    print('x won ', x, 'against', y)
elif x < y:
    print('y won ', y, 'against', x)
else:
    print('nichia')
